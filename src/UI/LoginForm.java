/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Entities.Usuario;
import Enum.Role;
import Persistence.Configs.LoginPersistence;
import Persistence.Configs.UsuarioPersistence;
import Persistence.Configs.Worker2Persistence;
import Persistence.JsonPersistence;
import static Persistence.JsonPersistence.alterarUsuarioNoJson;
import static Persistence.JsonPersistence.salvarJsonEmAppData;
import Persistence.Modules.DnsPersistence;
import UserConfig.UserProperties;
import com.formdev.flatlaf.FlatLightLaf;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import java.awt.Image;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Mauros
 */
public class LoginForm extends javax.swing.JFrame {

    private ArrayList<Usuario> UserArray = new ArrayList<>();

    /**
     * Creates new form LoginForm
     */
    public LoginForm() {

        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        initComponents();
        setLayout(null);
        this.initImg();
        carregarInformacoesArquivo();
        carregarInformacoes();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginTF = new javax.swing.JTextField();
        userL = new javax.swing.JLabel();
        passwordL = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        ntaLogoL = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        logoFurbL = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        dadosCHB = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NTA - Login do usuário");
        setMaximumSize(new java.awt.Dimension(400, 290));
        setMinimumSize(new java.awt.Dimension(400, 290));
        setPreferredSize(new java.awt.Dimension(400, 315));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        loginTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginTFActionPerformed(evt);
            }
        });
        loginTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                loginTFKeyReleased(evt);
            }
        });
        getContentPane().add(loginTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 230, -1));

        userL.setText("jLabel1");
        getContentPane().add(userL, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 72, 150, 120));

        passwordL.setText("jLabel1");
        getContentPane().add(passwordL, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 135, 120, 100));

        jPasswordField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyReleased(evt);
            }
        });
        getContentPane().add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 230, -1));

        ntaLogoL.setText("jLabel3");
        getContentPane().add(ntaLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 2, 110, 90));

        jButton1.setText("Acessar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 160, 40));

        jLabel1.setText("Informe seu login");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, -1, -1));

        logoFurbL.setText("jLabel2");
        getContentPane().add(logoFurbL, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 0, 110, 90));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 60, 60));

        dadosCHB.setText("Salvar meus dados");
        dadosCHB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dadosCHBStateChanged(evt);
            }
        });
        getContentPane().add(dadosCHB, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, -1, -1));

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginTFActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (!(loginTF.getText().length() > 0 && jPasswordField1.getPassword().length > 0)) {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos!", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Usuario user = this.pesquisarUsuarioPorNome(loginTF.getText());
        if (user == null) {
            JOptionPane.showMessageDialog(null, "Usuário não encontrado!", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (user.getSenha().equals(new String(jPasswordField1.getPassword())) && user.getUsuario().equals(loginTF.getText())) {
            alterUser();
            this.dispose();
            UserProperties.setUsuarioLogado(user);
            new MainMenuForm().setVisible(true);
            return;
        }
        JOptionPane.showMessageDialog(null, "Usuário ou senha incorreto!", "Aviso", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void loginTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginTFKeyReleased
        persistirInformacoes();
    }//GEN-LAST:event_loginTFKeyReleased

    private void jPasswordField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyReleased
        persistirInformacoes();
    }//GEN-LAST:event_jPasswordField1KeyReleased

    private void dadosCHBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dadosCHBStateChanged
        persistirInformacoes();
    }//GEN-LAST:event_dadosCHBStateChanged

    public void persistirInformacoes() {
        LoginPersistence config = new LoginPersistence();
        config.workspace = "Login";
        config.session = new LoginPersistence.SessionValues();
        config.session.usuario = loginTF.getText();
        config.session.senha = new String(jPasswordField1.getPassword());
        config.session.autoComplete = dadosCHB.isSelected();

        Gson gson = new GsonBuilder().setPrettyPrinting().create();
        salvarJsonEmAppData("userLoginConfig" + ".json", gson.toJson(config), "/Configs");
    }

    private void alterUser() {
        Usuario user = pesquisarUsuarioPorNome(loginTF.getText());
        UsuarioPersistence.SessionValues novoUsuario = new UsuarioPersistence.SessionValues();
        novoUsuario.usuario = user.getUsuario();
        novoUsuario.nomeCompleto = user.getNomeCompleto();
        novoUsuario.senha = user.getSenha();
        novoUsuario.email = user.getEmail();
        novoUsuario.role = user.getRole();
        novoUsuario.imageDir = user.getImageDir();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        novoUsuario.acesso = LocalDateTime.now().format(formatter);

        alterarUsuarioNoJson("Users.json", user.getUsuario(), novoUsuario);
    }

    public void carregarInformacoes() {
        String nomeArquivo = "userLoginConfig" + ".json";
        LoginPersistence config = JsonPersistence.carregarJsonAppdata(nomeArquivo, LoginPersistence.class, "/Configs");

        if (config == null || config.session == null) {
            System.out.println("Arquivo de configuração não encontrado ou inválido: " + nomeArquivo);
            return;
        }

        try {

            if (config.session.autoComplete == true) {
                loginTF.setText(config.session.usuario);
                jPasswordField1.setText(new String(config.session.senha));
                dadosCHB.setSelected(config.session.autoComplete);
            }
        } catch (Exception e) {
            System.err.println("Erro ao carregar valores do JSON para os componentes: " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginForm().setVisible(true);
            }
        });

    }

    public void carregarInformacoesArquivo() {
        String nomeArquivo = "Users.json";
        List<UsuarioPersistence> listaUsuarios = JsonPersistence.carregarJsonAppdataUsuario(nomeArquivo);
        if (listaUsuarios == null || listaUsuarios.isEmpty()) {
            System.out.println("Arquivo de configuração não encontrado ou inválido: " + nomeArquivo);
            return;
        }
        for (UsuarioPersistence config : listaUsuarios) {
            for (UsuarioPersistence.SessionValues entry : config.session) {
                this.addToArray(entry.imageDir, entry.usuario, entry.nomeCompleto, entry.senha, entry.email, entry.role, entry.acesso);
            }
        }

    }

    private void addToArray(String imageDir, String user, String nomeCompleto, String senha, String email, Role role, String acesso) {
        Usuario usuario = new Usuario(imageDir, user, nomeCompleto, senha, email, role, acesso);
        this.UserArray.add(usuario);
    }

    private Usuario pesquisarUsuarioPorNome(String input) {
        for (Usuario user : UserArray) {
            if (user.getUsuario().toLowerCase().equals(input.toLowerCase())) {
                return user;
            }
        }
        return null;
    }

    private void initImg() {
        //ScaledImages
        Image ntaLogo = this.getScaledImage("imgs/nta_logo2.png", ntaLogoL, true);
        Image userLogo = this.getScaledImage("imgs/userIcon1.png", userL, true);
        Image passwordLogo = this.getScaledImage("imgs/passwordIcon.png", passwordL, true);
        Image furbLogo = this.getScaledImage("imgs/furb_Icon.png", logoFurbL, true);

        //Setter Images
        setScaledImage(ntaLogoL, ntaLogo);
        setScaledImage(userL, userLogo);
        setScaledImage(passwordL, passwordLogo);
        setScaledImage(logoFurbL, furbLogo);
    }

    private Image getScaledImage(String directory, javax.swing.JLabel label, boolean scaled) {
        ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource(directory));
        Image image = icon.getImage();

        if (scaled) {
            Image ScaledImage = image.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
            return ScaledImage;
        } else {
            return image;
        }
    }

    private void setScaledImage(javax.swing.JLabel label, Image image) {
        label.setIcon(new javax.swing.ImageIcon(image));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox dadosCHB;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField loginTF;
    private javax.swing.JLabel logoFurbL;
    private javax.swing.JLabel ntaLogoL;
    private javax.swing.JLabel passwordL;
    private javax.swing.JLabel userL;
    // End of variables declaration//GEN-END:variables
}
