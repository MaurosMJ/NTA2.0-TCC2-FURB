/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Entities.LogOcurrenceMonitoring;
import Enum.LogLevel;
import Enum.Module;
import Persistence.JsonPersistence;
import Persistence.Logs.LogPersistence;
import Utils.RoundedBorder;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.Color;
import java.awt.FontMetrics;
import java.awt.Image;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.ImageIcon;
import javax.swing.UIManager;

/**
 *
 * @author Mauros
 */
public class MainMenuForm extends javax.swing.JFrame {

    private ArrayList<LogOcurrenceMonitoring> LogArray = new ArrayList<>();

    /**
     * Creates new form MainApplication
     */
    public MainMenuForm() {
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }

        initComponents();
        setLayout(null);
        this.initImg();
        exibirLogoNTA();
        setTextInfoButton("Selecione uma das opções abaixo.");
        carregarInformacoesArquivo();

        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                // Ao fechar a janela principal, abre novamente o LoginForm
                new LoginForm().setVisible(true);
            }
        });
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        httpLogoL = new javax.swing.JLabel();
        telnetLogoL = new javax.swing.JLabel();
        socketLogoL = new javax.swing.JLabel();
        fundoModulo3 = new javax.swing.JLabel();
        fundoTelnet = new javax.swing.JLabel();
        fundoFtp = new javax.swing.JLabel();
        ftpLogoL = new javax.swing.JLabel();
        smbLogoL = new javax.swing.JLabel();
        mailLogoL = new javax.swing.JLabel();
        fundoSmb = new javax.swing.JLabel();
        admSistemaLogoL = new javax.swing.JLabel();
        monitoramentoLogoL = new javax.swing.JLabel();
        fundoSocket = new javax.swing.JLabel();
        fundoHttp = new javax.swing.JLabel();
        fundoAdmSistema = new javax.swing.JLabel();
        fundoMonitoramento = new javax.swing.JLabel();
        fundoMail = new javax.swing.JLabel();
        InfoL = new javax.swing.JLabel();
        userInfoL = new javax.swing.JLabel();
        fineLogoL = new javax.swing.JLabel();
        errorLogoL = new javax.swing.JLabel();
        warningLogoL = new javax.swing.JLabel();
        hostsLogoL = new javax.swing.JLabel();
        separadorInferior1 = new javax.swing.JSeparator();
        separadorInferior2 = new javax.swing.JSeparator();
        txtErrorL = new javax.swing.JTextField();
        txtWarningL = new javax.swing.JTextField();
        txtHostsL = new javax.swing.JTextField();
        txtFineL = new javax.swing.JTextField();
        hostL = new javax.swing.JLabel();
        errorL1 = new javax.swing.JLabel();
        warningL = new javax.swing.JLabel();
        fineL = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("NTA - Painel de controle");
        setBackground(new java.awt.Color(204, 204, 204));
        setForeground(java.awt.Color.gray);
        setMaximumSize(new java.awt.Dimension(1030, 820));
        setMinimumSize(new java.awt.Dimension(1030, 820));
        setPreferredSize(new java.awt.Dimension(1030, 820));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        httpLogoL.setText(".");
        httpLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                httpLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                httpLogoLMouseEntered(evt);
            }
        });
        getContentPane().add(httpLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 150, 120));

        telnetLogoL.setText(".");
        telnetLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                telnetLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                telnetLogoLMouseEntered(evt);
            }
        });
        getContentPane().add(telnetLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 310, 150, 120));

        socketLogoL.setText(".");
        socketLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                socketLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                socketLogoLMouseEntered(evt);
            }
        });
        getContentPane().add(socketLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 310, 150, 120));

        fundoModulo3.setBackground(new java.awt.Color(204, 204, 204));
        fundoModulo3.setForeground(new java.awt.Color(204, 204, 204));
        fundoModulo3.setText(".");
        fundoModulo3.setToolTipText("");
        fundoModulo3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoModulo3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoModulo3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoModulo3MouseExited(evt);
            }
        });
        getContentPane().add(fundoModulo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 480, 300, 170));

        fundoTelnet.setBackground(new java.awt.Color(204, 204, 204));
        fundoTelnet.setForeground(new java.awt.Color(204, 204, 204));
        fundoTelnet.setText(".");
        fundoTelnet.setToolTipText("");
        fundoTelnet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoTelnetMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoTelnetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoTelnetMouseExited(evt);
            }
        });
        getContentPane().add(fundoTelnet, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 280, 300, 170));

        fundoFtp.setBackground(new java.awt.Color(204, 204, 204));
        fundoFtp.setForeground(new java.awt.Color(204, 204, 204));
        fundoFtp.setText(".");
        fundoFtp.setToolTipText("");
        fundoFtp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoFtpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoFtpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoFtpMouseExited(evt);
            }
        });
        getContentPane().add(fundoFtp, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 80, 300, 170));

        ftpLogoL.setText(".");
        ftpLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ftpLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ftpLogoLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ftpLogoLMouseExited(evt);
            }
        });
        getContentPane().add(ftpLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 110, 150, 120));

        smbLogoL.setText(".");
        smbLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                smbLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                smbLogoLMouseEntered(evt);
            }
        });
        getContentPane().add(smbLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 150, 120));

        mailLogoL.setText(".");
        mailLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mailLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mailLogoLMouseEntered(evt);
            }
        });
        getContentPane().add(mailLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 310, 150, 120));

        fundoSmb.setBackground(new java.awt.Color(204, 204, 204));
        fundoSmb.setForeground(new java.awt.Color(204, 204, 204));
        fundoSmb.setToolTipText("");
        fundoSmb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoSmbMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoSmbMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoSmbMouseExited(evt);
            }
        });
        getContentPane().add(fundoSmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 300, 170));

        admSistemaLogoL.setText(".");
        admSistemaLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                admSistemaLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                admSistemaLogoLMouseEntered(evt);
            }
        });
        getContentPane().add(admSistemaLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 515, 130, 100));

        monitoramentoLogoL.setText(".");
        monitoramentoLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monitoramentoLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                monitoramentoLogoLMouseEntered(evt);
            }
        });
        getContentPane().add(monitoramentoLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 500, 150, 120));

        fundoSocket.setBackground(new java.awt.Color(204, 204, 204));
        fundoSocket.setForeground(new java.awt.Color(204, 204, 204));
        fundoSocket.setToolTipText("");
        fundoSocket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoSocketMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoSocketMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoSocketMouseExited(evt);
            }
        });
        getContentPane().add(fundoSocket, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, 300, 170));

        fundoHttp.setBackground(new java.awt.Color(204, 204, 204));
        fundoHttp.setForeground(new java.awt.Color(204, 204, 204));
        fundoHttp.setToolTipText("");
        fundoHttp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoHttpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoHttpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoHttpMouseExited(evt);
            }
        });
        getContentPane().add(fundoHttp, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 300, 170));

        fundoAdmSistema.setBackground(new java.awt.Color(204, 204, 204));
        fundoAdmSistema.setForeground(new java.awt.Color(204, 204, 204));
        fundoAdmSistema.setToolTipText("");
        fundoAdmSistema.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoAdmSistemaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoAdmSistemaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoAdmSistemaMouseExited(evt);
            }
        });
        getContentPane().add(fundoAdmSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, 300, 170));

        fundoMonitoramento.setBackground(new java.awt.Color(204, 204, 204));
        fundoMonitoramento.setForeground(new java.awt.Color(204, 204, 204));
        fundoMonitoramento.setToolTipText("");
        fundoMonitoramento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoMonitoramentoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoMonitoramentoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoMonitoramentoMouseExited(evt);
            }
        });
        getContentPane().add(fundoMonitoramento, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 480, 300, 170));

        fundoMail.setBackground(new java.awt.Color(204, 204, 204));
        fundoMail.setForeground(new java.awt.Color(204, 204, 204));
        fundoMail.setToolTipText("");
        fundoMail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoMailMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoMailMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoMailMouseExited(evt);
            }
        });
        getContentPane().add(fundoMail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 300, 170));
        getContentPane().add(InfoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 27, 30, 30));

        userInfoL.setBackground(new java.awt.Color(255, 255, 255));
        userInfoL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userInfoL.setText("Selecione uma das opções abaixo.");
        userInfoL.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        userInfoL.setOpaque(true);
        getContentPane().add(userInfoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 360, -1));

        fineLogoL.setText("jLabel1");
        getContentPane().add(fineLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 690, 70, 60));

        errorLogoL.setText("jLabel1");
        getContentPane().add(errorLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 700, 50, 40));

        warningLogoL.setText("jLabel1");
        getContentPane().add(warningLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 700, 50, 40));

        hostsLogoL.setText("jLabel1");
        getContentPane().add(hostsLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 690, 80, 60));
        getContentPane().add(separadorInferior1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 670, 1200, 10));
        getContentPane().add(separadorInferior2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 660, 1200, 10));

        txtErrorL.setEditable(false);
        txtErrorL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtErrorL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtErrorL.setText("0");
        txtErrorL.setFocusable(false);
        txtErrorL.setRequestFocusEnabled(false);
        txtErrorL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtErrorLActionPerformed(evt);
            }
        });
        getContentPane().add(txtErrorL, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 700, 70, 40));

        txtWarningL.setEditable(false);
        txtWarningL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtWarningL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtWarningL.setText("0");
        txtWarningL.setFocusable(false);
        txtWarningL.setRequestFocusEnabled(false);
        txtWarningL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWarningLActionPerformed(evt);
            }
        });
        getContentPane().add(txtWarningL, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 700, 70, 40));

        txtHostsL.setEditable(false);
        txtHostsL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtHostsL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHostsL.setText("0");
        txtHostsL.setFocusable(false);
        txtHostsL.setRequestFocusEnabled(false);
        txtHostsL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHostsLActionPerformed(evt);
            }
        });
        getContentPane().add(txtHostsL, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 700, 70, 40));

        txtFineL.setEditable(false);
        txtFineL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtFineL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFineL.setText("0");
        txtFineL.setFocusable(false);
        txtFineL.setRequestFocusEnabled(false);
        txtFineL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFineLActionPerformed(evt);
            }
        });
        getContentPane().add(txtFineL, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 700, 70, 40));

        hostL.setText(".");
        hostL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hostLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hostLMouseExited(evt);
            }
        });
        getContentPane().add(hostL, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 690, 150, 70));

        errorL1.setText(".");
        errorL1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                errorL1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                errorL1MouseExited(evt);
            }
        });
        getContentPane().add(errorL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 690, 150, 70));

        warningL.setText(".");
        warningL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                warningLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                warningLMouseExited(evt);
            }
        });
        getContentPane().add(warningL, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 690, 150, 70));

        fineL.setText(".");
        fineL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fineLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fineLMouseExited(evt);
            }
        });
        getContentPane().add(fineL, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 690, 150, 70));

        jMenu1.setText("Sobre");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Sessão");

        jMenuItem1.setText("Encerrar Sessão");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Trocar Sessão");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fundoHttpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoHttpMouseEntered
        // TODO add your handling code here:
        //       jLabel4.setBackground(new java.awt.Color(255,255,255));
        fundoHttp.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Configurar monitoramento utilizando protocolo HTTP.");
        ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
//userInfoL.setBounds(userInfoL.getX(), userInfoL.getY(), userInfoL.getHeight(), userInfoL.getWidth()+300); // muda a posição e tamanho
    }//GEN-LAST:event_fundoHttpMouseEntered

    private void fundoHttpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoHttpMouseExited
        fundoHttp.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        exibirLogoNTA();
        // TODO add your handling code here:
    }//GEN-LAST:event_fundoHttpMouseExited

    private void fundoSmbMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSmbMouseEntered
        fundoSmb.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Configurar monitoramento utilizando protocolo SMB.");
        ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
        // TODO add your handling code here:
    }//GEN-LAST:event_fundoSmbMouseEntered

    private void fundoSmbMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSmbMouseExited
        // TODO add your handling code here:
        fundoSmb.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        exibirLogoNTA();
    }//GEN-LAST:event_fundoSmbMouseExited

    private void fundoMailMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoMailMouseEntered
        fundoMail.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Configurar monitoramento utilizando protocolo SMTP.");
        ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
        // TODO add your handling code here:
    }//GEN-LAST:event_fundoMailMouseEntered

    private void fundoMailMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoMailMouseExited
        // TODO add your handling code here:
        fundoMail.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        exibirLogoNTA();
    }//GEN-LAST:event_fundoMailMouseExited

    private void fundoSocketMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSocketMouseEntered
        // TODO add your handling code here:
        fundoSocket.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura  
        setTextInfoButton("Configurar monitoramento através de uma conexão Socket.");
        ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_fundoSocketMouseEntered

    private void fundoSocketMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSocketMouseExited
        // TODO add your handling code here:
        fundoSocket.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        exibirLogoNTA();
    }//GEN-LAST:event_fundoSocketMouseExited

    private void fundoAdmSistemaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoAdmSistemaMouseEntered
        // TODO add your handling code here:
        fundoAdmSistemaAction();
    }//GEN-LAST:event_fundoAdmSistemaMouseEntered

    private void fundoAdmSistemaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoAdmSistemaMouseExited
        // TODO add your handling code here:
        fundoAdmSistema.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        exibirLogoNTA();
    }//GEN-LAST:event_fundoAdmSistemaMouseExited

    private void fundoMonitoramentoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoMonitoramentoMouseEntered
        // TODO add your handling code here:
        fundoMonitoramento.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura  
        setTextInfoButton("Acessar o painel de monitoramento remoto.");
        ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_fundoMonitoramentoMouseEntered

    private void fundoMonitoramentoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoMonitoramentoMouseExited
        // TODO add your handling code here:
        fundoMonitoramento.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // 3px de espessura
        exibirLogoNTA();
    }//GEN-LAST:event_fundoMonitoramentoMouseExited

    private void txtErrorLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtErrorLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtErrorLActionPerformed

    private void txtWarningLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWarningLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWarningLActionPerformed

    private void txtFineLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFineLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFineLActionPerformed

    private void txtHostsLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHostsLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHostsLActionPerformed

    private void hostLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostLMouseEntered
        // TODO add your handling code here:
        hostL.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Quantidade de máquinas monitoradas.");
        ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_hostLMouseEntered

    private void errorL1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_errorL1MouseEntered
        // TODO add your handling code here:
        errorL1.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Quantidade de erros encontrados.");
        ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_errorL1MouseEntered

    private void warningLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_warningLMouseEntered
        // TODO add your handling code here:
        warningL.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Quantidade de avisos encontrados.");
        ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_warningLMouseEntered

    private void fineLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fineLMouseEntered
        // TODO add your handling code here:
        fineL.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Quantidade de conexões bem-sucedidas.");
        ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_fineLMouseEntered

    private void errorL1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_errorL1MouseExited
        // TODO add your handling code here:
        errorL1.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
    }//GEN-LAST:event_errorL1MouseExited

    private void warningLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_warningLMouseExited
        // TODO add your handling code here:
        warningL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
    }//GEN-LAST:event_warningLMouseExited

    private void fineLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fineLMouseExited
        // TODO add your handling code here:
        fineL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
    }//GEN-LAST:event_fineLMouseExited

    private void hostLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostLMouseExited
        // TODO add your handling code here:
        hostL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
    }//GEN-LAST:event_hostLMouseExited

    private void fundoHttpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoHttpMouseClicked
        fundoHttpAction();
    }//GEN-LAST:event_fundoHttpMouseClicked

    private void fundoSocketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSocketMouseClicked
        fundoSocketAction();
    }//GEN-LAST:event_fundoSocketMouseClicked

    private void httpLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_httpLogoLMouseClicked
        fundoHttpAction();
    }//GEN-LAST:event_httpLogoLMouseClicked

    private void smbLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_smbLogoLMouseClicked
        fundoSmbAction();
    }//GEN-LAST:event_smbLogoLMouseClicked

    private void fundoSmbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSmbMouseClicked
        fundoSmbAction();
    }//GEN-LAST:event_fundoSmbMouseClicked

    private void mailLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mailLogoLMouseClicked
        fundoMailAction();
    }//GEN-LAST:event_mailLogoLMouseClicked

    private void fundoMailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoMailMouseClicked
        fundoMailAction();
    }//GEN-LAST:event_fundoMailMouseClicked

    private void socketLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_socketLogoLMouseClicked
        fundoSocketAction();
    }//GEN-LAST:event_socketLogoLMouseClicked

    private void admSistemaLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admSistemaLogoLMouseClicked
        fundoAdmSistemaAction();
    }//GEN-LAST:event_admSistemaLogoLMouseClicked

    private void fundoAdmSistemaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoAdmSistemaMouseClicked
        fundoAdmSistemaAction();
    }//GEN-LAST:event_fundoAdmSistemaMouseClicked

    private void monitoramentoLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monitoramentoLogoLMouseClicked
        fundoMonitoramentoAction();
    }//GEN-LAST:event_monitoramentoLogoLMouseClicked

    private void fundoMonitoramentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoMonitoramentoMouseClicked
        fundoMonitoramentoAction();
    }//GEN-LAST:event_fundoMonitoramentoMouseClicked

    private void mailLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mailLogoLMouseEntered
        // TODO add your handling code here:
        fundoMail.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo SMTP.");
        ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_mailLogoLMouseEntered

    private void socketLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_socketLogoLMouseEntered
        fundoSocket.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento através de uma conexão Socket.");
        ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_socketLogoLMouseEntered

    private void httpLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_httpLogoLMouseEntered
        fundoHttp.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo HTTP.");
        ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_httpLogoLMouseEntered

    private void smbLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_smbLogoLMouseEntered
        fundoSmb.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo SMB.");
        ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_smbLogoLMouseEntered

    private void admSistemaLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admSistemaLogoLMouseEntered
        fundoAdmSistemaAction();
    }//GEN-LAST:event_admSistemaLogoLMouseEntered

    private void monitoramentoLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monitoramentoLogoLMouseEntered
        fundoMonitoramento.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura  
        setTextInfoButton("Acessar o painel de monitoramento remoto.");
        ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_monitoramentoLogoLMouseEntered

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.dispose();
        new LoginForm().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void fundoFtpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoFtpMouseClicked
        this.dispose();
        new FtpUI().setVisible(true);

    }//GEN-LAST:event_fundoFtpMouseClicked

    private void fundoFtpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoFtpMouseEntered
        fundoFtp.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo FTP.");
        ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_fundoFtpMouseEntered

    private void fundoFtpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoFtpMouseExited
        // TODO add your handling code here:
        fundoFtp.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        exibirLogoNTA();
    }//GEN-LAST:event_fundoFtpMouseExited

    private void fundoTelnetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoTelnetMouseClicked
        this.dispose();
        new TelnetUI().setVisible(true);
    }//GEN-LAST:event_fundoTelnetMouseClicked

    private void fundoTelnetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoTelnetMouseEntered
        fundoTelnet.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo Telnet.");
        ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_fundoTelnetMouseEntered

    private void fundoTelnetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoTelnetMouseExited
        fundoTelnet.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        exibirLogoNTA();
    }//GEN-LAST:event_fundoTelnetMouseExited

    private void fundoModulo3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoModulo3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fundoModulo3MouseClicked

    private void fundoModulo3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoModulo3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_fundoModulo3MouseEntered

    private void fundoModulo3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoModulo3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_fundoModulo3MouseExited

    private void ftpLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ftpLogoLMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ftpLogoLMouseClicked

    private void ftpLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ftpLogoLMouseEntered
        fundoFtp.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo FTP.");
        ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_ftpLogoLMouseEntered

    private void ftpLogoLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ftpLogoLMouseExited

    }//GEN-LAST:event_ftpLogoLMouseExited

    private void telnetLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telnetLogoLMouseClicked
        this.dispose();
        new TelnetUI().setVisible(true);
    }//GEN-LAST:event_telnetLogoLMouseClicked

    private void telnetLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telnetLogoLMouseEntered
        fundoTelnet.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo Telnet.");
        ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_telnetLogoLMouseEntered

    private void fundoMonitoramentoAction() {

        this.dispose();
        new MonitoringUI().setVisible(true);

    }

    private void fundoAdmSistemaAction() {
        fundoAdmSistema.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura  
        setTextInfoButton("Configurar parametrizações do sistema.");
        ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }

    private void fundoSocketAction() {
        this.dispose();
        new SocketUI().setVisible(true);

    }

    private void fundoMailAction() {
        this.dispose();
        new SmtpUI().setVisible(true);
    }

    private void fundoSmbAction() {
        this.dispose();
        new SmbUI().setVisible(true);
    }

    private void fundoHttpAction() {
        this.dispose();
        new HttpUI().setVisible(true);
    }

    public void carregarInformacoesArquivo() {
        String nomeArquivo = "LogNTA.json";
        List<LogPersistence> listaLogs = JsonPersistence.carregarJsonAppdataLog(nomeArquivo);

        if (listaLogs == null || listaLogs.isEmpty()) {
            System.out.println("Arquivo de configuração não encontrado ou inválido: " + nomeArquivo);
            return;
        }
        for (LogPersistence config : listaLogs) {
            for (LogPersistence.SessionValues entry : config.session) {
                this.addToArray(entry.maquina, entry.level, config.module, entry.log, entry.icmpRequest, entry.data);
            }
        }
        carregarBarraStatus();
    }

    //Metodo adiciona tudo oque recebe do arquivo de leitura ao ARRAY
    private void addToArray(String host, LogLevel level, String modulo, String inputLog, double icmp, String occurrence) {

        LogOcurrenceMonitoring log = new LogOcurrenceMonitoring(host, level, Module.valueOf(modulo), inputLog, icmp, occurrence);
        this.LogArray.add(log);
    }

    private void carregarBarraStatus() {
        int qtdFine = 0;
        int qtdWarn = 0;
        int qtdError = 0;

        Set<String> hostsUnicos = new HashSet<>();

        for (LogOcurrenceMonitoring log : LogArray) {

            hostsUnicos.add(log.getHost());

            if (log.getLevel() == LogLevel.DEBUG
                    || log.getLevel() == LogLevel.FINE
                    || log.getLevel() == LogLevel.INFO) {
                qtdFine++;
            }
            if (log.getLevel() == LogLevel.WARNING) {
                qtdWarn++;
            }
            if (log.getLevel() == LogLevel.ERROR || log.getLevel() == LogLevel.SEVERE) {
                qtdError++;
            }
        }

        txtErrorL.setText(String.valueOf(qtdError));
        txtFineL.setText(String.valueOf(qtdFine));
        txtWarningL.setText(String.valueOf(qtdWarn));
        txtHostsL.setText(String.valueOf(hostsUnicos.size()));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenuForm().setVisible(true);
            }
        });
    }

    private void initImg() {
        //ScaledImages
        Image infoButtonLogo = this.getScaledImage("imgs/info_button.png", InfoL, true);
        Image httpLogo = this.getScaledImage("imgs/http_Icon.png", httpLogoL, true);
        Image smbLogo = this.getScaledImage("imgs/smb_Icon.png", smbLogoL, true);
        Image socketLogo = this.getScaledImage("imgs/socket_icon.png", socketLogoL, true);
        Image mailLogo = this.getScaledImage("imgs/mail_icon.png", mailLogoL, true);
        Image sysAdminLogo = this.getScaledImage("imgs/sysadmin_icon.png", admSistemaLogoL, true);
        Image monitoramentoLogo = this.getScaledImage("imgs/remote_monitoring.png", monitoramentoLogoL, true);
        Image ftpLogo = this.getScaledImage("imgs/ftp_Icon.png", ftpLogoL, true);
        Image telnetLogo = this.getScaledImage("imgs/telnet_Icon.png", telnetLogoL, true);

        Image warningLogo = this.getScaledImage("imgs/warning_static.png", warningLogoL, true);
        Image errorLogo = this.getScaledImage("imgs/error_static.png", errorLogoL, true);
        Image fineLogo = this.getScaledImage("imgs/fine_static.png", fineLogoL, true);
        Image hostLogo = this.getScaledImage("imgs/server_static.png", hostsLogoL, true);

        //Setter Images
        setScaledImage(InfoL, infoButtonLogo);
        setScaledImage(httpLogoL, httpLogo);
        setScaledImage(smbLogoL, smbLogo);
        setScaledImage(socketLogoL, socketLogo);
        setScaledImage(mailLogoL, mailLogo);
        setScaledImage(admSistemaLogoL, sysAdminLogo);
        setScaledImage(monitoramentoLogoL, monitoramentoLogo);
        setScaledImage(ftpLogoL, ftpLogo);
        setScaledImage(telnetLogoL, telnetLogo);

        setScaledImage(warningLogoL, warningLogo);
        setScaledImage(errorLogoL, errorLogo);
        setScaledImage(fineLogoL, fineLogo);
        setScaledImage(hostsLogoL, hostLogo);

        fundoHttp.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        fundoSmb.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        fundoSocket.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        fundoMail.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        fundoAdmSistema.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // 1px de espessura  
        fundoMonitoramento.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        fundoFtp.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        fundoTelnet.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        fundoModulo3.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));

        errorL1.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        warningL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        fineL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        hostL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));

    }

    private Image getScaledImage(String directory, javax.swing.JLabel label, boolean scaled) {
        ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource(directory));
        Image image = icon.getImage();

        if (scaled) {
            Image ScaledImage = image.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
            return ScaledImage;
        } else {
            return image;
        }
    }

    private void setScaledImage(javax.swing.JLabel label, Image image) {
        label.setIcon(new javax.swing.ImageIcon(image));
    }

    private void setTextInfoButton(String input) {
        userInfoL.setText(input);
        ajustarTamanhoLabel(userInfoL);
        userInfoL.setBounds(obterPosicaoCentralEixoX(), userInfoL.getY(), userInfoL.getPreferredSize().width, userInfoL.getPreferredSize().height);
        InfoL.setBounds(obterPosicaoCentralEixoX() - 35, userInfoL.getY(), userInfoL.getPreferredSize().width, userInfoL.getPreferredSize().height);
    }

    private int obterPosicaoCentralEixoX() {
        int frameWidth = getWidth();
        int labelWidth = userInfoL.getPreferredSize().width;
        int labelX = (frameWidth - labelWidth) / 2;
        return labelX;
    }

    private void ajustarTamanhoLabel(javax.swing.JLabel lbl) {
        FontMetrics metrics = lbl.getFontMetrics(lbl.getFont());
        int larguraTexto = metrics.stringWidth(lbl.getText());
        int alturaTexto = metrics.getHeight();

        int margemHorizontal = 20;
        int margemVertical = 10;

        lbl.setSize(larguraTexto + margemHorizontal, alturaTexto + margemVertical);
    }

    private void ocultarLogoNTA() {
        InfoL.setVisible(true);
        userInfoL.setVisible(true);
        ajustarTamanhoLabel(userInfoL);
    }

    private void exibirLogoNTA() {
        InfoL.setVisible(true);
        userInfoL.setVisible(true);
        setTextInfoButton("Selecione uma das opções abaixo.");
        ajustarTamanhoLabel(userInfoL);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel InfoL;
    private javax.swing.JLabel admSistemaLogoL;
    private javax.swing.JLabel errorL1;
    private javax.swing.JLabel errorLogoL;
    private javax.swing.JLabel fineL;
    private javax.swing.JLabel fineLogoL;
    private javax.swing.JLabel ftpLogoL;
    private javax.swing.JLabel fundoAdmSistema;
    private javax.swing.JLabel fundoFtp;
    private javax.swing.JLabel fundoHttp;
    private javax.swing.JLabel fundoMail;
    private javax.swing.JLabel fundoModulo3;
    private javax.swing.JLabel fundoMonitoramento;
    private javax.swing.JLabel fundoSmb;
    private javax.swing.JLabel fundoSocket;
    private javax.swing.JLabel fundoTelnet;
    private javax.swing.JLabel hostL;
    private javax.swing.JLabel hostsLogoL;
    private javax.swing.JLabel httpLogoL;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JLabel mailLogoL;
    private javax.swing.JLabel monitoramentoLogoL;
    private javax.swing.JSeparator separadorInferior1;
    private javax.swing.JSeparator separadorInferior2;
    private javax.swing.JLabel smbLogoL;
    private javax.swing.JLabel socketLogoL;
    private javax.swing.JLabel telnetLogoL;
    private javax.swing.JTextField txtErrorL;
    private javax.swing.JTextField txtFineL;
    private javax.swing.JTextField txtHostsL;
    private javax.swing.JTextField txtWarningL;
    private javax.swing.JLabel userInfoL;
    private javax.swing.JLabel warningL;
    private javax.swing.JLabel warningLogoL;
    // End of variables declaration//GEN-END:variables
}
