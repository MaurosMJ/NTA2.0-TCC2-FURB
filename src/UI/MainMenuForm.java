/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Entities.LogOcurrenceMonitoring;
import Entities.Usuario;
import Enum.LogLevel;
import Enum.Module;
import Enum.Role;
import Persistence.Configs.UsuarioPersistence;
import Persistence.JsonPersistence;
import Persistence.Logs.LogPersistence;
import UserConfig.UserProperties;
import Utils.RoundedBorder;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.ImageIcon;
import javax.swing.UIManager;

/**
 *
 * @author Mauros
 */
public class MainMenuForm extends javax.swing.JFrame {

    private ArrayList<LogOcurrenceMonitoring> LogArray = new ArrayList<>();
    private ArrayList<Usuario> UserArray = new ArrayList<>();

    /**
     * Creates new form MainApplication
     */
    public MainMenuForm() {

        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }

        initComponents();
        setLayout(null);
        this.initImg();
        exibirLogoNTA();
        carregarInformacoesArquivoLog();
        carregarInformacoesArquivoUsers();
        jScrollPane1.getVerticalScrollBar().setPreferredSize(new Dimension(20, Integer.MAX_VALUE));
        jScrollPane1.getHorizontalScrollBar().setPreferredSize(new Dimension(Integer.MAX_VALUE, 20));

        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                new LoginForm().setVisible(true);
            }
        });
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        menuPanel = new javax.swing.JPanel();
        httpLogoL = new javax.swing.JLabel();
        telnetLogoL = new javax.swing.JLabel();
        socketLogoL = new javax.swing.JLabel();
        fundoSSH = new javax.swing.JLabel();
        fundoTelnet = new javax.swing.JLabel();
        fundoFtp = new javax.swing.JLabel();
        ftpLogoL = new javax.swing.JLabel();
        smbLogoL = new javax.swing.JLabel();
        mailLogoL = new javax.swing.JLabel();
        fundoSmb = new javax.swing.JLabel();
        admSistemaLogoL = new javax.swing.JLabel();
        monitoramentoLogoL = new javax.swing.JLabel();
        fundoSocket = new javax.swing.JLabel();
        fundoHttp = new javax.swing.JLabel();
        fundoAdmSistema = new javax.swing.JLabel();
        fundoMonitoramento = new javax.swing.JLabel();
        fundoMail = new javax.swing.JLabel();
        sshLogoL = new javax.swing.JLabel();
        fundoIcmpL = new javax.swing.JLabel();
        icmpLogoL = new javax.swing.JLabel();
        fundoNtp = new javax.swing.JLabel();
        admSistemaLogoL1 = new javax.swing.JLabel();
        ntpLogoL = new javax.swing.JLabel();
        fundoDns = new javax.swing.JLabel();
        dnsLogoL = new javax.swing.JLabel();
        infoButtonPanel = new javax.swing.JPanel();
        userInfoL = new javax.swing.JLabel();
        InfoL = new javax.swing.JLabel();
        userImgL = new javax.swing.JLabel();
        userL = new javax.swing.JLabel();
        roleL = new javax.swing.JLabel();
        fundoLogin = new javax.swing.JLabel();
        statusPanel = new javax.swing.JPanel();
        workerTF2 = new javax.swing.JTextField();
        workerLogoL2 = new javax.swing.JLabel();
        workerL2 = new javax.swing.JLabel();
        workerLogoL1 = new javax.swing.JLabel();
        workerL1 = new javax.swing.JLabel();
        workerTF1 = new javax.swing.JTextField();
        fineLogoL = new javax.swing.JLabel();
        errorLogoL = new javax.swing.JLabel();
        warningLogoL = new javax.swing.JLabel();
        hostsLogoL = new javax.swing.JLabel();
        txtErrorL = new javax.swing.JTextField();
        txtWarningL = new javax.swing.JTextField();
        txtHostsL = new javax.swing.JTextField();
        txtFineL = new javax.swing.JTextField();
        hostL = new javax.swing.JLabel();
        errorL1 = new javax.swing.JLabel();
        warningL = new javax.swing.JLabel();
        fineL = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("NTA - Painel de controle");
        setBackground(new java.awt.Color(242, 242, 242));
        setForeground(java.awt.Color.gray);
        setMaximumSize(new java.awt.Dimension(1100, 821));
        setMinimumSize(new java.awt.Dimension(1000, 821));
        setPreferredSize(new java.awt.Dimension(1045, 850));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(242, 242, 242));
        jScrollPane1.setMaximumSize(new java.awt.Dimension(1045, 1030));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(1045, 1030));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(1030, 1030));

        menuPanel.setBackground(new java.awt.Color(242, 242, 242));
        menuPanel.setMaximumSize(new java.awt.Dimension(1000, 821));
        menuPanel.setMinimumSize(new java.awt.Dimension(1200, 821));
        menuPanel.setName(""); // NOI18N
        menuPanel.setPreferredSize(new java.awt.Dimension(1010, 820));
        menuPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        httpLogoL.setText(".");
        httpLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                httpLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                httpLogoLMouseEntered(evt);
            }
        });
        menuPanel.add(httpLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 150, 120));

        telnetLogoL.setText(".");
        telnetLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                telnetLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                telnetLogoLMouseEntered(evt);
            }
        });
        menuPanel.add(telnetLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 250, 150, 120));

        socketLogoL.setText(".");
        socketLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                socketLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                socketLogoLMouseEntered(evt);
            }
        });
        menuPanel.add(socketLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, 150, 120));

        fundoSSH.setBackground(new java.awt.Color(204, 204, 204));
        fundoSSH.setForeground(new java.awt.Color(204, 204, 204));
        fundoSSH.setText(".");
        fundoSSH.setToolTipText("");
        fundoSSH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoSSHMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoSSHMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoSSHMouseExited(evt);
            }
        });
        menuPanel.add(fundoSSH, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 420, 300, 170));

        fundoTelnet.setBackground(new java.awt.Color(204, 204, 204));
        fundoTelnet.setForeground(new java.awt.Color(204, 204, 204));
        fundoTelnet.setText(".");
        fundoTelnet.setToolTipText("");
        fundoTelnet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoTelnetMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoTelnetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoTelnetMouseExited(evt);
            }
        });
        menuPanel.add(fundoTelnet, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 220, 300, 170));

        fundoFtp.setBackground(new java.awt.Color(204, 204, 204));
        fundoFtp.setForeground(new java.awt.Color(204, 204, 204));
        fundoFtp.setText(".");
        fundoFtp.setToolTipText("");
        fundoFtp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoFtpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoFtpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoFtpMouseExited(evt);
            }
        });
        menuPanel.add(fundoFtp, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 300, 170));

        ftpLogoL.setText(".");
        ftpLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ftpLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ftpLogoLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ftpLogoLMouseExited(evt);
            }
        });
        menuPanel.add(ftpLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 50, 150, 120));

        smbLogoL.setText(".");
        smbLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                smbLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                smbLogoLMouseEntered(evt);
            }
        });
        menuPanel.add(smbLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 150, 120));

        mailLogoL.setText(".");
        mailLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mailLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mailLogoLMouseEntered(evt);
            }
        });
        menuPanel.add(mailLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 150, 120));

        fundoSmb.setBackground(new java.awt.Color(204, 204, 204));
        fundoSmb.setForeground(new java.awt.Color(204, 204, 204));
        fundoSmb.setToolTipText("");
        fundoSmb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoSmbMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoSmbMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoSmbMouseExited(evt);
            }
        });
        menuPanel.add(fundoSmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 300, 170));

        admSistemaLogoL.setText(".");
        admSistemaLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                admSistemaLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                admSistemaLogoLMouseEntered(evt);
            }
        });
        menuPanel.add(admSistemaLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 450, 130, 100));

        monitoramentoLogoL.setText(".");
        monitoramentoLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monitoramentoLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                monitoramentoLogoLMouseEntered(evt);
            }
        });
        menuPanel.add(monitoramentoLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 440, 150, 120));

        fundoSocket.setBackground(new java.awt.Color(204, 204, 204));
        fundoSocket.setForeground(new java.awt.Color(204, 204, 204));
        fundoSocket.setToolTipText("");
        fundoSocket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoSocketMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoSocketMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoSocketMouseExited(evt);
            }
        });
        menuPanel.add(fundoSocket, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, 300, 170));

        fundoHttp.setBackground(new java.awt.Color(204, 204, 204));
        fundoHttp.setForeground(new java.awt.Color(204, 204, 204));
        fundoHttp.setToolTipText("");
        fundoHttp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoHttpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoHttpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoHttpMouseExited(evt);
            }
        });
        menuPanel.add(fundoHttp, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 300, 170));

        fundoAdmSistema.setBackground(new java.awt.Color(204, 204, 204));
        fundoAdmSistema.setForeground(new java.awt.Color(204, 204, 204));
        fundoAdmSistema.setToolTipText("");
        fundoAdmSistema.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoAdmSistemaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoAdmSistemaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoAdmSistemaMouseExited(evt);
            }
        });
        menuPanel.add(fundoAdmSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 300, 170));

        fundoMonitoramento.setBackground(new java.awt.Color(204, 204, 204));
        fundoMonitoramento.setForeground(new java.awt.Color(204, 204, 204));
        fundoMonitoramento.setToolTipText("");
        fundoMonitoramento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoMonitoramentoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoMonitoramentoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoMonitoramentoMouseExited(evt);
            }
        });
        menuPanel.add(fundoMonitoramento, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 420, 300, 170));

        fundoMail.setBackground(new java.awt.Color(204, 204, 204));
        fundoMail.setForeground(new java.awt.Color(204, 204, 204));
        fundoMail.setToolTipText("");
        fundoMail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoMailMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoMailMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoMailMouseExited(evt);
            }
        });
        menuPanel.add(fundoMail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 300, 170));

        sshLogoL.setText(".");
        sshLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sshLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sshLogoLMouseEntered(evt);
            }
        });
        menuPanel.add(sshLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 440, 150, 120));

        fundoIcmpL.setBackground(new java.awt.Color(204, 204, 204));
        fundoIcmpL.setForeground(new java.awt.Color(204, 204, 204));
        fundoIcmpL.setToolTipText("");
        fundoIcmpL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoIcmpLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoIcmpLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoIcmpLMouseExited(evt);
            }
        });
        menuPanel.add(fundoIcmpL, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 620, 300, 170));

        icmpLogoL.setText(".");
        icmpLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                icmpLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                icmpLogoLMouseEntered(evt);
            }
        });
        menuPanel.add(icmpLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 640, 150, 120));

        fundoNtp.setBackground(new java.awt.Color(204, 204, 204));
        fundoNtp.setForeground(new java.awt.Color(204, 204, 204));
        fundoNtp.setToolTipText("");
        fundoNtp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoNtpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoNtpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoNtpMouseExited(evt);
            }
        });
        menuPanel.add(fundoNtp, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 620, 300, 170));

        admSistemaLogoL1.setText(".");
        admSistemaLogoL1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                admSistemaLogoL1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                admSistemaLogoL1MouseEntered(evt);
            }
        });
        menuPanel.add(admSistemaLogoL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 450, 130, 100));

        ntpLogoL.setText(".");
        ntpLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ntpLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ntpLogoLMouseEntered(evt);
            }
        });
        menuPanel.add(ntpLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 650, 150, 120));

        fundoDns.setBackground(new java.awt.Color(204, 204, 204));
        fundoDns.setForeground(new java.awt.Color(204, 204, 204));
        fundoDns.setText(".");
        fundoDns.setToolTipText("");
        fundoDns.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundoDnsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fundoDnsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fundoDnsMouseExited(evt);
            }
        });
        menuPanel.add(fundoDns, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 620, 300, 170));

        dnsLogoL.setText(".");
        dnsLogoL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dnsLogoLMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dnsLogoLMouseEntered(evt);
            }
        });
        menuPanel.add(dnsLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 640, 150, 120));

        jScrollPane1.setViewportView(menuPanel);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1040, 610));

        infoButtonPanel.setMinimumSize(new java.awt.Dimension(680, 65));
        infoButtonPanel.setPreferredSize(new java.awt.Dimension(680, 80));
        infoButtonPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userInfoL.setBackground(new java.awt.Color(255, 255, 255));
        userInfoL.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        userInfoL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userInfoL.setText("Selecione uma das opções abaixo.");
        userInfoL.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        userInfoL.setOpaque(true);
        infoButtonPanel.add(userInfoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 360, -1));
        infoButtonPanel.add(InfoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 15, 30, 30));

        userImgL.setText(".");
        infoButtonPanel.add(userImgL, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 20, 40, 40));

        userL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userL.setText(".");
        infoButtonPanel.add(userL, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, 140, -1));

        roleL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        roleL.setText(".");
        infoButtonPanel.add(roleL, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 40, 140, -1));
        infoButtonPanel.add(fundoLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 240, 60));

        getContentPane().add(infoButtonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 75));

        statusPanel.setMinimumSize(new java.awt.Dimension(640, 80));
        statusPanel.setPreferredSize(new java.awt.Dimension(100, 90));
        statusPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workerTF2.setEditable(false);
        workerTF2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        workerTF2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        workerTF2.setText("NOK");
        workerTF2.setFocusable(false);
        workerTF2.setRequestFocusEnabled(false);
        workerTF2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workerTF2ActionPerformed(evt);
            }
        });
        statusPanel.add(workerTF2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 30, 70, 40));

        workerLogoL2.setText("jLabel1");
        statusPanel.add(workerLogoL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 30, 40, 40));

        workerL2.setText(".");
        workerL2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                workerL2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                workerL2MouseExited(evt);
            }
        });
        statusPanel.add(workerL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 20, 150, 70));

        workerLogoL1.setText("jLabel1");
        statusPanel.add(workerLogoL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, 40, 40));

        workerL1.setText(".");
        workerL1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                workerL1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                workerL1MouseExited(evt);
            }
        });
        statusPanel.add(workerL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, 150, 70));

        workerTF1.setEditable(false);
        workerTF1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        workerTF1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        workerTF1.setText("NOK");
        workerTF1.setFocusable(false);
        workerTF1.setRequestFocusEnabled(false);
        workerTF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workerTF1ActionPerformed(evt);
            }
        });
        statusPanel.add(workerTF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 30, 70, 40));

        fineLogoL.setText("jLabel1");
        statusPanel.add(fineLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 70, 60));

        errorLogoL.setText("jLabel1");
        statusPanel.add(errorLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 50, 40));

        warningLogoL.setText("jLabel1");
        statusPanel.add(warningLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 50, 40));

        hostsLogoL.setText("jLabel1");
        statusPanel.add(hostsLogoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 80, 60));

        txtErrorL.setEditable(false);
        txtErrorL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtErrorL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtErrorL.setText("0");
        txtErrorL.setFocusable(false);
        txtErrorL.setRequestFocusEnabled(false);
        txtErrorL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtErrorLActionPerformed(evt);
            }
        });
        statusPanel.add(txtErrorL, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 70, 40));

        txtWarningL.setEditable(false);
        txtWarningL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtWarningL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtWarningL.setText("0");
        txtWarningL.setFocusable(false);
        txtWarningL.setRequestFocusEnabled(false);
        txtWarningL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWarningLActionPerformed(evt);
            }
        });
        statusPanel.add(txtWarningL, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 70, 40));

        txtHostsL.setEditable(false);
        txtHostsL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtHostsL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHostsL.setText("0");
        txtHostsL.setFocusable(false);
        txtHostsL.setRequestFocusEnabled(false);
        txtHostsL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHostsLActionPerformed(evt);
            }
        });
        statusPanel.add(txtHostsL, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, 70, 40));

        txtFineL.setEditable(false);
        txtFineL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtFineL.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFineL.setText("0");
        txtFineL.setFocusable(false);
        txtFineL.setRequestFocusEnabled(false);
        txtFineL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFineLActionPerformed(evt);
            }
        });
        statusPanel.add(txtFineL, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, 70, 40));

        hostL.setText(".");
        hostL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hostLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hostLMouseExited(evt);
            }
        });
        statusPanel.add(hostL, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 150, 70));

        errorL1.setText(".");
        errorL1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                errorL1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                errorL1MouseExited(evt);
            }
        });
        statusPanel.add(errorL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 150, 70));

        warningL.setText(".");
        warningL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                warningLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                warningLMouseExited(evt);
            }
        });
        statusPanel.add(warningL, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 150, 70));

        fineL.setText(".");
        fineL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fineLMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fineLMouseExited(evt);
            }
        });
        statusPanel.add(fineL, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 150, 70));

        getContentPane().add(statusPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 690, 1040, 130));

        jMenu1.setText("Sobre");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Sessão");

        jMenuItem1.setText("Encerrar Sessão");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Trocar Sessão");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fundoHttpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoHttpMouseEntered
        // TODO add your handling code here:
        //       jLabel4.setBackground(new java.awt.Color(255,255,255));
        fundoHttp.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Configurar monitoramento utilizando protocolo HTTP.");
        //      ajustarTamanhoLabel(userInfoL);
//        ocultarLogoNTA();
//userInfoL.setBounds(userInfoL.getX(), userInfoL.getY(), userInfoL.getHeight(), userInfoL.getWidth()+300); // muda a posição e tamanho
    }//GEN-LAST:event_fundoHttpMouseEntered

    private void fundoHttpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoHttpMouseExited
        fundoHttp.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        exibirLogoNTA();
        // TODO add your handling code here:
    }//GEN-LAST:event_fundoHttpMouseExited

    private void fundoSmbMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSmbMouseEntered
        fundoSmb.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Configurar monitoramento utilizando protocolo SMB.");
        ocultarLogoNTA();
        //     ajustarTamanhoLabel(userInfoL);
        //      ocultarLogoNTA();
        // TODO add your handling code here:
    }//GEN-LAST:event_fundoSmbMouseEntered

    private void fundoSmbMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSmbMouseExited
        // TODO add your handling code here:
        fundoSmb.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        exibirLogoNTA();
    }//GEN-LAST:event_fundoSmbMouseExited

    private void fundoMailMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoMailMouseEntered
        fundoMail.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Configurar monitoramento utilizando protocolo SMTP.");
        //   ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
        // TODO add your handling code here:
    }//GEN-LAST:event_fundoMailMouseEntered

    private void fundoMailMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoMailMouseExited
        // TODO add your handling code here:
        fundoMail.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        exibirLogoNTA();
    }//GEN-LAST:event_fundoMailMouseExited

    private void fundoSocketMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSocketMouseEntered
        // TODO add your handling code here:
        fundoSocket.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura  
        setTextInfoButton("Configurar monitoramento através de uma conexão Socket.");
        //   ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_fundoSocketMouseEntered

    private void fundoSocketMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSocketMouseExited
        // TODO add your handling code here:
        fundoSocket.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        exibirLogoNTA();
    }//GEN-LAST:event_fundoSocketMouseExited

    private void fundoAdmSistemaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoAdmSistemaMouseEntered
        // TODO add your handling code here:
        fundoAdmSistemaAction();
    }//GEN-LAST:event_fundoAdmSistemaMouseEntered

    private void fundoAdmSistemaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoAdmSistemaMouseExited
        // TODO add your handling code here:
        fundoAdmSistema.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        exibirLogoNTA();
    }//GEN-LAST:event_fundoAdmSistemaMouseExited

    private void fundoMonitoramentoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoMonitoramentoMouseEntered
        // TODO add your handling code here:
        fundoMonitoramento.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura  
        setTextInfoButton("Acessar o painel de monitoramento remoto.");
        //      ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_fundoMonitoramentoMouseEntered

    private void fundoMonitoramentoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoMonitoramentoMouseExited
        // TODO add your handling code here:
        fundoMonitoramento.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // 3px de espessura
        exibirLogoNTA();
    }//GEN-LAST:event_fundoMonitoramentoMouseExited

    private void txtErrorLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtErrorLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtErrorLActionPerformed

    private void txtWarningLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWarningLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWarningLActionPerformed

    private void txtFineLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFineLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFineLActionPerformed

    private void txtHostsLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHostsLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHostsLActionPerformed

    private void hostLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostLMouseEntered
        // TODO add your handling code here:
        hostL.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Quantidade de máquinas monitoradas.");
        //      ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_hostLMouseEntered

    private void errorL1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_errorL1MouseEntered
        // TODO add your handling code here:
        errorL1.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Quantidade de erros encontrados.");
        //     ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_errorL1MouseEntered

    private void warningLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_warningLMouseEntered
        // TODO add your handling code here:
        warningL.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Quantidade de avisos encontrados.");
        //       ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_warningLMouseEntered

    private void fineLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fineLMouseEntered
        // TODO add your handling code here:
        fineL.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura
        setTextInfoButton("Quantidade de conexões bem-sucedidas.");
//        ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_fineLMouseEntered

    private void errorL1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_errorL1MouseExited
        // TODO add your handling code here:
        errorL1.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
    }//GEN-LAST:event_errorL1MouseExited

    private void warningLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_warningLMouseExited
        // TODO add your handling code here:
        warningL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
    }//GEN-LAST:event_warningLMouseExited

    private void fineLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fineLMouseExited
        // TODO add your handling code here:
        fineL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
    }//GEN-LAST:event_fineLMouseExited

    private void hostLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostLMouseExited
        // TODO add your handling code here:
        hostL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
    }//GEN-LAST:event_hostLMouseExited

    private void fundoHttpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoHttpMouseClicked
        fundoHttpAction();
    }//GEN-LAST:event_fundoHttpMouseClicked

    private void fundoSocketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSocketMouseClicked
        fundoSocketAction();
    }//GEN-LAST:event_fundoSocketMouseClicked

    private void httpLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_httpLogoLMouseClicked
        fundoHttpAction();
    }//GEN-LAST:event_httpLogoLMouseClicked

    private void smbLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_smbLogoLMouseClicked
        fundoSmbAction();
    }//GEN-LAST:event_smbLogoLMouseClicked

    private void fundoSmbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSmbMouseClicked
        fundoSmbAction();
    }//GEN-LAST:event_fundoSmbMouseClicked

    private void mailLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mailLogoLMouseClicked
        fundoMailAction();
    }//GEN-LAST:event_mailLogoLMouseClicked

    private void fundoMailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoMailMouseClicked
        fundoMailAction();
    }//GEN-LAST:event_fundoMailMouseClicked

    private void socketLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_socketLogoLMouseClicked
        fundoSocketAction();
    }//GEN-LAST:event_socketLogoLMouseClicked

    private void admSistemaLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admSistemaLogoLMouseClicked
        fundoAdmSistemaAction();
    }//GEN-LAST:event_admSistemaLogoLMouseClicked

    private void fundoAdmSistemaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoAdmSistemaMouseClicked
        this.dispose();
        new ConfigUI().setVisible(true);
    }//GEN-LAST:event_fundoAdmSistemaMouseClicked

    private void monitoramentoLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monitoramentoLogoLMouseClicked
        fundoMonitoramentoAction();
    }//GEN-LAST:event_monitoramentoLogoLMouseClicked

    private void fundoMonitoramentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoMonitoramentoMouseClicked
        fundoMonitoramentoAction();
    }//GEN-LAST:event_fundoMonitoramentoMouseClicked

    private void mailLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mailLogoLMouseEntered
        // TODO add your handling code here:
        fundoMail.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo SMTP.");
//        ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_mailLogoLMouseEntered

    private void socketLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_socketLogoLMouseEntered
        fundoSocket.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento através de uma conexão Socket.");
//        ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_socketLogoLMouseEntered

    private void httpLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_httpLogoLMouseEntered
        fundoHttp.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo HTTP.");
//        ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_httpLogoLMouseEntered

    private void smbLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_smbLogoLMouseEntered
        fundoSmb.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        ocultarLogoNTA();
        setTextInfoButton("Configurar monitoramento utilizando protocolo SMB.");
        ocultarLogoNTA();
//        ajustarTamanhoLabel(userInfoL);
//        ocultarLogoNTA();
    }//GEN-LAST:event_smbLogoLMouseEntered

    private void admSistemaLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admSistemaLogoLMouseEntered
        fundoAdmSistemaAction();
    }//GEN-LAST:event_admSistemaLogoLMouseEntered

    private void monitoramentoLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monitoramentoLogoLMouseEntered
        fundoMonitoramento.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura  
        setTextInfoButton("Acessar o painel de monitoramento remoto.");
        //       ajustarTamanhoLabel(userInfoL);
        ocultarLogoNTA();
    }//GEN-LAST:event_monitoramentoLogoLMouseEntered

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.dispose();
        new LoginForm().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void fundoFtpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoFtpMouseClicked
        this.dispose();
        new FtpUI().setVisible(true);

    }//GEN-LAST:event_fundoFtpMouseClicked

    private void fundoFtpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoFtpMouseEntered
        fundoFtp.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo FTP.");
        //       ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_fundoFtpMouseEntered

    private void fundoFtpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoFtpMouseExited
        // TODO add your handling code here:
        fundoFtp.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        exibirLogoNTA();
    }//GEN-LAST:event_fundoFtpMouseExited

    private void fundoTelnetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoTelnetMouseClicked
        this.dispose();
        new TelnetUI().setVisible(true);
    }//GEN-LAST:event_fundoTelnetMouseClicked

    private void fundoTelnetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoTelnetMouseEntered
        fundoTelnet.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo Telnet.");
        //       ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_fundoTelnetMouseEntered

    private void fundoTelnetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoTelnetMouseExited
        fundoTelnet.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        exibirLogoNTA();
    }//GEN-LAST:event_fundoTelnetMouseExited

    private void fundoSSHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSSHMouseClicked
        this.dispose();
        new SshUI().setVisible(true);
    }//GEN-LAST:event_fundoSSHMouseClicked

    private void fundoSSHMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSSHMouseEntered
        // TODO add your handling code here:

        fundoSSH.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo SSH.");
//        ajustarTamanhoLabel(userInfoL);

    }//GEN-LAST:event_fundoSSHMouseEntered

    private void fundoSSHMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoSSHMouseExited
        fundoSSH.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        exibirLogoNTA();
    }//GEN-LAST:event_fundoSSHMouseExited

    private void ftpLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ftpLogoLMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ftpLogoLMouseClicked

    private void ftpLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ftpLogoLMouseEntered
        fundoFtp.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo FTP.");
//        ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_ftpLogoLMouseEntered

    private void ftpLogoLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ftpLogoLMouseExited

    }//GEN-LAST:event_ftpLogoLMouseExited

    private void telnetLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telnetLogoLMouseClicked
        this.dispose();
        new TelnetUI().setVisible(true);
    }//GEN-LAST:event_telnetLogoLMouseClicked

    private void telnetLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telnetLogoLMouseEntered
        fundoTelnet.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo Telnet.");
        //       ajustarTamanhoLabel(userInfoL);
    }//GEN-LAST:event_telnetLogoLMouseEntered

    private void sshLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sshLogoLMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_sshLogoLMouseClicked

    private void sshLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sshLogoLMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_sshLogoLMouseEntered

    private void fundoIcmpLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoIcmpLMouseClicked
        this.dispose();
        new IcmpUI().setVisible(true);
    }//GEN-LAST:event_fundoIcmpLMouseClicked

    private void fundoIcmpLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoIcmpLMouseEntered
        fundoIcmpL.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo ICMP.");
    }//GEN-LAST:event_fundoIcmpLMouseEntered

    private void fundoIcmpLMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoIcmpLMouseExited
        fundoIcmpL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        exibirLogoNTA();
    }//GEN-LAST:event_fundoIcmpLMouseExited

    private void icmpLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icmpLogoLMouseClicked
        this.dispose();
        new SshUI().setVisible(true);
    }//GEN-LAST:event_icmpLogoLMouseClicked

    private void icmpLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icmpLogoLMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_icmpLogoLMouseEntered

    private void fundoNtpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoNtpMouseClicked
        this.dispose();
        new NtpUI().setVisible(true);
    }//GEN-LAST:event_fundoNtpMouseClicked

    private void fundoNtpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoNtpMouseEntered
        fundoNtp.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo NTP.");
    }//GEN-LAST:event_fundoNtpMouseEntered

    private void fundoNtpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoNtpMouseExited
        fundoNtp.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        exibirLogoNTA();
    }//GEN-LAST:event_fundoNtpMouseExited

    private void admSistemaLogoL1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admSistemaLogoL1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_admSistemaLogoL1MouseClicked

    private void admSistemaLogoL1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admSistemaLogoL1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_admSistemaLogoL1MouseEntered

    private void ntpLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ntpLogoLMouseClicked

    }//GEN-LAST:event_ntpLogoLMouseClicked

    private void ntpLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ntpLogoLMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_ntpLogoLMouseEntered

    private void fundoDnsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoDnsMouseClicked
        this.dispose();
        new DnsUI().setVisible(true);
    }//GEN-LAST:event_fundoDnsMouseClicked

    private void fundoDnsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoDnsMouseEntered
        fundoDns.setBorder(new RoundedBorder(Color.BLUE, 3, 20));
        setTextInfoButton("Configurar monitoramento utilizando protocolo DNS.");
    }//GEN-LAST:event_fundoDnsMouseEntered

    private void fundoDnsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundoDnsMouseExited
        fundoDns.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        exibirLogoNTA();
    }//GEN-LAST:event_fundoDnsMouseExited

    private void dnsLogoLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dnsLogoLMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_dnsLogoLMouseClicked

    private void dnsLogoLMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dnsLogoLMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_dnsLogoLMouseEntered

    private void workerL1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workerL1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_workerL1MouseEntered

    private void workerL1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workerL1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_workerL1MouseExited

    private void workerTF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workerTF1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_workerTF1ActionPerformed

    private void workerL2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workerL2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_workerL2MouseEntered

    private void workerL2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workerL2MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_workerL2MouseExited

    private void workerTF2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workerTF2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_workerTF2ActionPerformed

    private void fundoMonitoramentoAction() {

        this.dispose();
        new MonitoringUI().setVisible(true);

    }

    private void fundoAdmSistemaAction() {
        fundoAdmSistema.setBorder(new RoundedBorder(Color.BLUE, 3, 20)); // 3px de espessura  
        setTextInfoButton("Configurar parametrizações do sistema.");
        ocultarLogoNTA();
    }

    private void fundoSocketAction() {
        this.dispose();
        new SocketUI().setVisible(true);

    }

    private void fundoMailAction() {
        this.dispose();
        new SmtpUI().setVisible(true);
    }

    private void fundoSmbAction() {
        this.dispose();
        new SmbUI().setVisible(true);
    }

    private void fundoHttpAction() {
        this.dispose();
        new HttpUI().setVisible(true);
    }

    public void carregarInformacoesArquivoLog() {
        String nomeArquivo = "LogNTA.json";
        List<LogPersistence> listaLogs = JsonPersistence.carregarJsonAppdataLog(nomeArquivo);

        if (listaLogs == null || listaLogs.isEmpty()) {
            System.out.println("Arquivo de configuração não encontrado ou inválido: " + nomeArquivo);
            return;
        }
        for (LogPersistence config : listaLogs) {
            for (LogPersistence.SessionValues entry : config.session) {
                this.addToArray(entry.maquina, entry.level, config.module, entry.log, entry.icmpRequest, entry.data);
            }
        }
        carregarBarraStatus();
    }

    //Metodo adiciona tudo oque recebe do arquivo de leitura ao ARRAY
    private void addToArray(String host, LogLevel level, String modulo, String inputLog, double icmp, String occurrence) {

        LogOcurrenceMonitoring log = new LogOcurrenceMonitoring(host, level, Module.valueOf(modulo), inputLog, icmp, occurrence);
        this.LogArray.add(log);
    }

    private void carregarBarraStatus() {
        int qtdFine = 0;
        int qtdWarn = 0;
        int qtdError = 0;

        Set<String> hostsUnicos = new HashSet<>();

        for (LogOcurrenceMonitoring log : LogArray) {

            hostsUnicos.add(log.getHost());

            if (log.getLevel() == LogLevel.DEBUG
                    || log.getLevel() == LogLevel.FINE
                    || log.getLevel() == LogLevel.INFO) {
                qtdFine++;
            }
            if (log.getLevel() == LogLevel.WARNING) {
                qtdWarn++;
            }
            if (log.getLevel() == LogLevel.ERROR || log.getLevel() == LogLevel.SEVERE) {
                qtdError++;
            }
        }

        txtErrorL.setText(String.valueOf(qtdError));
        txtFineL.setText(String.valueOf(qtdFine));
        txtWarningL.setText(String.valueOf(qtdWarn));
        txtHostsL.setText(String.valueOf(hostsUnicos.size()));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenuForm().setVisible(true);
            }
        });
    }

    private void initImg() {
        //ScaledImages
        Image infoButtonLogo = this.getScaledImage("imgs/info_button.png", InfoL, true);
        Image httpLogo = this.getScaledImage("imgs/http_Icon.png", httpLogoL, true);
        Image smbLogo = this.getScaledImage("imgs/smb_Icon.png", smbLogoL, true);
        Image socketLogo = this.getScaledImage("imgs/socket_icon.png", socketLogoL, true);
        Image mailLogo = this.getScaledImage("imgs/mail_icon.png", mailLogoL, true);
        Image sysAdminLogo = this.getScaledImage("imgs/sysadmin_icon.png", admSistemaLogoL, true);
        Image monitoramentoLogo = this.getScaledImage("imgs/remote_monitoring.png", monitoramentoLogoL, true);
        Image ftpLogo = this.getScaledImage("imgs/ftp_Icon.png", ftpLogoL, true);
        Image telnetLogo = this.getScaledImage("imgs/telnet_Icon.png", telnetLogoL, true);
        Image sshLogo = this.getScaledImage("imgs/ssh_Icon.png", sshLogoL, true);

        Image warningLogo = this.getScaledImage("imgs/warning_static.png", warningLogoL, true);
        Image errorLogo = this.getScaledImage("imgs/error_static.png", errorLogoL, true);
        Image fineLogo = this.getScaledImage("imgs/fine_static.png", fineLogoL, true);
        Image hostLogo = this.getScaledImage("imgs/server_static.png", hostsLogoL, true);
        Image icmpLogo = this.getScaledImage("imgs/ICMP_Icon.png", icmpLogoL, true);
        Image ntpLogo = this.getScaledImage("imgs/ntp_Icon.png", ntpLogoL, true);
        Image dnsLogo = this.getScaledImage("imgs/dns_Icon.png", dnsLogoL, true);
        Image worker1Logo = this.getScaledImage("imgs/Worker.png", workerLogoL1, true);
        Image worker2Logo = this.getScaledImage("imgs/notificationWorker.png", workerLogoL2, true);

        //Setter Images
        setScaledImage(InfoL, infoButtonLogo);
        setScaledImage(httpLogoL, httpLogo);
        setScaledImage(smbLogoL, smbLogo);
        setScaledImage(socketLogoL, socketLogo);
        setScaledImage(mailLogoL, mailLogo);
        setScaledImage(admSistemaLogoL, sysAdminLogo);
        setScaledImage(monitoramentoLogoL, monitoramentoLogo);
        setScaledImage(ftpLogoL, ftpLogo);
        setScaledImage(telnetLogoL, telnetLogo);
        setScaledImage(sshLogoL, sshLogo);
        setScaledImage(icmpLogoL, icmpLogo);
        setScaledImage(ntpLogoL, ntpLogo);
        setScaledImage(dnsLogoL, dnsLogo);

        setScaledImage(warningLogoL, warningLogo);
        setScaledImage(errorLogoL, errorLogo);
        setScaledImage(fineLogoL, fineLogo);
        setScaledImage(hostsLogoL, hostLogo);
        setScaledImage(workerLogoL1, worker1Logo);
        setScaledImage(workerLogoL2, worker2Logo);

        fundoHttp.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        fundoSmb.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        fundoSocket.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        fundoMail.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // volta pra 1px
        fundoAdmSistema.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20)); // 1px de espessura  
        fundoMonitoramento.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        fundoFtp.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        fundoTelnet.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        fundoSSH.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        fundoIcmpL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        fundoNtp.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        fundoDns.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));

        errorL1.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        warningL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        fineL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        hostL.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        workerL1.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        workerL2.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 1, 20));
        fundoLogin.setBorder(new RoundedBorder(Color.LIGHT_GRAY, 2, 20));
        

        Color cor = Color.decode("#E8E8E8");
        statusPanel.setBackground(cor);
        infoButtonPanel.setBackground(cor);
        workerLogoL1.setEnabled(false);
        workerLogoL2.setEnabled(false);
        Image userLogo;
        if ("Sem imagem".equals(UserProperties.getUsuarioLogado().getImageDir())) {
            userLogo = this.getScaledImage("imgs/userIcon.png", userImgL, true);
        } else {
            userLogo = this.getScaledImage(UserProperties.getUsuarioLogado().getImageDir(), userImgL);
        }
        setScaledImage(userImgL, userLogo);
        userL.setText(UserProperties.getUsuarioLogado().getNomeCompleto());
        roleL.setText(UserProperties.getUsuarioLogado().getRole().toString());
    }

    public void carregarInformacoesArquivoUsers() {
        String nomeArquivo = "Users.json";
        List<UsuarioPersistence> listaUsuarios = JsonPersistence.carregarJsonAppdataUsuario(nomeArquivo);
        if (listaUsuarios == null || listaUsuarios.isEmpty()) {
            System.out.println("Arquivo de configuração não encontrado ou inválido: " + nomeArquivo);
            return;
        }
        for (UsuarioPersistence config : listaUsuarios) {
            for (UsuarioPersistence.SessionValues entry : config.session) {
                this.addToArray(entry.imageDir, entry.usuario, entry.nomeCompleto, entry.senha, entry.email, entry.role, entry.acesso);
            }
        }

    }

    private void addToArray(String imageDir, String user, String nomeCompleto, String senha, String email, Role role, String acesso) {
        Usuario usuario = new Usuario(imageDir, user, nomeCompleto, senha, email, role, acesso);
        this.UserArray.add(usuario);
    }

    private Usuario pesquisarUsuarioPorNome(String input) {
        for (Usuario user : UserArray) {
            if (user.getUsuario().toLowerCase().equals(input.toLowerCase())) {
                return user;
            }
        }
        return null;
    }

    private Image getScaledImage(String directory, javax.swing.JLabel label, boolean scaled) {
        ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource(directory));
        Image image = icon.getImage();

        if (scaled) {
            Image ScaledImage = image.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
            return ScaledImage;
        } else {
            return image;
        }
    }

    private Image getScaledImage(String directory, javax.swing.JLabel label) {
        ImageIcon icon = new ImageIcon(directory);
        Image image = icon.getImage();

        Image ScaledImage = image.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
        return ScaledImage;
    }

    private void setScaledImage(javax.swing.JLabel label, Image image) {
        label.setIcon(new javax.swing.ImageIcon(image));
    }

    private void setTextInfoButton(String input) {
        userInfoL.setText(input);
    }

    private void ocultarLogoNTA() {
        InfoL.setVisible(true);
        userInfoL.setVisible(true);
    }

    private void exibirLogoNTA() {
        InfoL.setVisible(true);
        userInfoL.setVisible(true);
        setTextInfoButton("Selecione uma das opções abaixo.");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel InfoL;
    private javax.swing.JLabel admSistemaLogoL;
    private javax.swing.JLabel admSistemaLogoL1;
    private javax.swing.JLabel dnsLogoL;
    private javax.swing.JLabel errorL1;
    private javax.swing.JLabel errorLogoL;
    private javax.swing.JLabel fineL;
    private javax.swing.JLabel fineLogoL;
    private javax.swing.JLabel ftpLogoL;
    private javax.swing.JLabel fundoAdmSistema;
    private javax.swing.JLabel fundoDns;
    private javax.swing.JLabel fundoFtp;
    private javax.swing.JLabel fundoHttp;
    private javax.swing.JLabel fundoIcmpL;
    private javax.swing.JLabel fundoLogin;
    private javax.swing.JLabel fundoMail;
    private javax.swing.JLabel fundoMonitoramento;
    private javax.swing.JLabel fundoNtp;
    private javax.swing.JLabel fundoSSH;
    private javax.swing.JLabel fundoSmb;
    private javax.swing.JLabel fundoSocket;
    private javax.swing.JLabel fundoTelnet;
    private javax.swing.JLabel hostL;
    private javax.swing.JLabel hostsLogoL;
    private javax.swing.JLabel httpLogoL;
    private javax.swing.JLabel icmpLogoL;
    private javax.swing.JPanel infoButtonPanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mailLogoL;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel monitoramentoLogoL;
    private javax.swing.JLabel ntpLogoL;
    private javax.swing.JLabel roleL;
    private javax.swing.JLabel smbLogoL;
    private javax.swing.JLabel socketLogoL;
    private javax.swing.JLabel sshLogoL;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JLabel telnetLogoL;
    private javax.swing.JTextField txtErrorL;
    private javax.swing.JTextField txtFineL;
    private javax.swing.JTextField txtHostsL;
    private javax.swing.JTextField txtWarningL;
    private javax.swing.JLabel userImgL;
    private javax.swing.JLabel userInfoL;
    private javax.swing.JLabel userL;
    private javax.swing.JLabel warningL;
    private javax.swing.JLabel warningLogoL;
    private javax.swing.JLabel workerL1;
    private javax.swing.JLabel workerL2;
    private javax.swing.JLabel workerLogoL1;
    private javax.swing.JLabel workerLogoL2;
    private javax.swing.JTextField workerTF1;
    private javax.swing.JTextField workerTF2;
    // End of variables declaration//GEN-END:variables
}
